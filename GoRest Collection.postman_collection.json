{
	"info": {
		"_postman_id": "1a3b2836-4a9a-434b-8cbf-6ac73625779e",
		"name": "GoRest Collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "16714231"
	},
	"item": [
		{
			"name": "GET",
			"item": [
				{
					"name": "GET All Users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}",
							"host": [
								"{{base_url}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET User by ID - Valid ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://gorest.co.in/public/v2/users?id=1844",
							"protocol": "https",
							"host": [
								"gorest",
								"co",
								"in"
							],
							"path": [
								"public",
								"v2",
								"users"
							],
							"query": [
								{
									"key": "id",
									"value": "1844"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET User by ID - Invalid ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response body is empty\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.eql([]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://gorest.co.in/public/v2/users?id=s",
							"protocol": "https",
							"host": [
								"gorest",
								"co",
								"in"
							],
							"path": [
								"public",
								"v2",
								"users"
							],
							"query": [
								{
									"key": "id",
									"value": "s"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET User by Email - Valid Email",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://gorest.co.in/public/v2/users?email=adhiraj_kaniyar@wisoky-walter.example",
							"protocol": "https",
							"host": [
								"gorest",
								"co",
								"in"
							],
							"path": [
								"public",
								"v2",
								"users"
							],
							"query": [
								{
									"key": "email",
									"value": "adhiraj_kaniyar@wisoky-walter.example"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET User by Email - Invalid Email",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response body is empty\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.eql([]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://gorest.co.in/public/v2/users?email=[[",
							"protocol": "https",
							"host": [
								"gorest",
								"co",
								"in"
							],
							"path": [
								"public",
								"v2",
								"users"
							],
							"query": [
								{
									"key": "email",
									"value": "[["
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "POST",
			"item": [
				{
					"name": "POST Unauthorized",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"pm.test(\"Body is correct\", function () {\r",
									"    pm.response.to.have.body(\"\\{\\\"message\\\":\\\"Authentication failed\\\"\\}\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Unauthorized}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://gorest.co.in/public/v2/users",
							"protocol": "https",
							"host": [
								"gorest",
								"co",
								"in"
							],
							"path": [
								"public",
								"v2",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST Create User - Email Empty",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 422\", function () {\r",
									"    pm.response.to.have.status(422);\r",
									"});\r",
									"pm.test(\"Body is correct\", function () {\r",
									"    responseBody = {\r",
									"        \"field\": \"email\",\r",
									"        \"message\": \"can't be blank\"\r",
									"    }\r",
									"    pm.expect(pm.response.json()).to.deep.include(responseBody);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "fa2436410ecbf5f844b3563887b93a9c8aae99acedf191754599da3bf3c31159",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://gorest.co.in/public/v2/users?email=&name=Boban&gender=male&status=active",
							"protocol": "https",
							"host": [
								"gorest",
								"co",
								"in"
							],
							"path": [
								"public",
								"v2",
								"users"
							],
							"query": [
								{
									"key": "email",
									"value": ""
								},
								{
									"key": "name",
									"value": "Boban"
								},
								{
									"key": "gender",
									"value": "male"
								},
								{
									"key": "status",
									"value": "active"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "POST Create User - Status Empty",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 422\", function () {\r",
									"    pm.response.to.have.status(422);\r",
									"});\r",
									"pm.test(\"Body is correct\", function () {\r",
									"    responseBody = {\r",
									"        \"field\": \"status\",\r",
									"        \"message\": \"can't be blank\"\r",
									"    }\r",
									"    pm.expect(pm.response.json()).to.deep.include(responseBody);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "fa2436410ecbf5f844b3563887b93a9c8aae99acedf191754599da3bf3c31159",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://gorest.co.in/public/v2/users?email=prns11121t@gmail.com&name=Boban&gender=male&status=",
							"protocol": "https",
							"host": [
								"gorest",
								"co",
								"in"
							],
							"path": [
								"public",
								"v2",
								"users"
							],
							"query": [
								{
									"key": "email",
									"value": "prns11121t@gmail.com"
								},
								{
									"key": "name",
									"value": "Boban"
								},
								{
									"key": "gender",
									"value": "male"
								},
								{
									"key": "status",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "POST Create User - Name Empty",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 422\", function () {\r",
									"    pm.response.to.have.status(422);\r",
									"});\r",
									"pm.test(\"Body is correct\", function () {\r",
									"    responseBody = {\r",
									"        \"field\": \"name\",\r",
									"        \"message\": \"can't be blank\"\r",
									"    }\r",
									"    pm.expect(pm.response.json()).to.deep.include(responseBody);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "fa2436410ecbf5f844b3563887b93a9c8aae99acedf191754599da3bf3c31159",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://gorest.co.in/public/v2/users?email=psrns111t@gmail.com&name=&gender=male&status=active",
							"protocol": "https",
							"host": [
								"gorest",
								"co",
								"in"
							],
							"path": [
								"public",
								"v2",
								"users"
							],
							"query": [
								{
									"key": "email",
									"value": "psrns111t@gmail.com"
								},
								{
									"key": "name",
									"value": ""
								},
								{
									"key": "gender",
									"value": "male"
								},
								{
									"key": "status",
									"value": "active"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "POST Create User - Gender Empty",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 422\", function () {\r",
									"    pm.response.to.have.status(422);\r",
									"});\r",
									"pm.test(\"Body is correct\", function () {\r",
									"    responseBody = {\r",
									"        \"field\": \"gender\",\r",
									"        \"message\": \"can't be blank, can be male of female\"\r",
									"    }\r",
									"    pm.expect(pm.response.json()).to.deep.include(responseBody);\r",
									"}); "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "fa2436410ecbf5f844b3563887b93a9c8aae99acedf191754599da3bf3c31159",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://gorest.co.in/public/v2/users?email=psrsns111111t@gmail.com&name=Boban&gender=&status=active",
							"protocol": "https",
							"host": [
								"gorest",
								"co",
								"in"
							],
							"path": [
								"public",
								"v2",
								"users"
							],
							"query": [
								{
									"key": "email",
									"value": "psrsns111111t@gmail.com"
								},
								{
									"key": "name",
									"value": "Boban"
								},
								{
									"key": "gender",
									"value": ""
								},
								{
									"key": "status",
									"value": "active"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "POST Create User - Email Invalid",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 422\", function () {\r",
									"    pm.response.to.have.status(422);\r",
									"});\r",
									"pm.test(\"Body is correct\", function () {\r",
									"    responseBody = {\r",
									"        \"field\": \"email\",\r",
									"        \"message\": \"is invalid\"\r",
									"    }\r",
									"    pm.expect(pm.response.json()).to.deep.include(responseBody);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "fa2436410ecbf5f844b3563887b93a9c8aae99acedf191754599da3bf3c31159",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://gorest.co.in/public/v2/users?email=[[&name=Boban&gender=male&status=active",
							"protocol": "https",
							"host": [
								"gorest",
								"co",
								"in"
							],
							"path": [
								"public",
								"v2",
								"users"
							],
							"query": [
								{
									"key": "email",
									"value": "[["
								},
								{
									"key": "name",
									"value": "Boban"
								},
								{
									"key": "gender",
									"value": "male"
								},
								{
									"key": "status",
									"value": "active"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "POST Create User - Status Invalid",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 422\", function () {\r",
									"    pm.response.to.have.status(422);\r",
									"});\r",
									"pm.test(\"Body is correct\", function () {\r",
									"    responseBody = {\r",
									"        \"field\": \"status\",\r",
									"        \"message\": \"can't be blank\"\r",
									"    }\r",
									"    pm.expect(pm.response.json()).to.deep.include(responseBody);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "fa2436410ecbf5f844b3563887b93a9c8aae99acedf191754599da3bf3c31159",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://gorest.co.in/public/v2/users?email=prns11121t@gmail.com&name=Boban&gender=male&status=1",
							"protocol": "https",
							"host": [
								"gorest",
								"co",
								"in"
							],
							"path": [
								"public",
								"v2",
								"users"
							],
							"query": [
								{
									"key": "email",
									"value": "prns11121t@gmail.com"
								},
								{
									"key": "name",
									"value": "Boban"
								},
								{
									"key": "gender",
									"value": "male"
								},
								{
									"key": "status",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "POST Create User - Gender Invalid",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 422\", function () {\r",
									"    pm.response.to.have.status(422);\r",
									"});\r",
									"pm.test(\"Body is correct\", function () {\r",
									"    responseBody = {\r",
									"        \"field\": \"gender\",\r",
									"        \"message\": \"can't be blank, can be male of female\"\r",
									"    }\r",
									"    pm.expect(pm.response.json()).to.deep.include(responseBody);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "fa2436410ecbf5f844b3563887b93a9c8aae99acedf191754599da3bf3c31159",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://gorest.co.in/public/v2/users?email=psrsns111111t@gmail.com&name=Boban&gender=test&status=active",
							"protocol": "https",
							"host": [
								"gorest",
								"co",
								"in"
							],
							"path": [
								"public",
								"v2",
								"users"
							],
							"query": [
								{
									"key": "email",
									"value": "psrsns111111t@gmail.com"
								},
								{
									"key": "name",
									"value": "Boban"
								},
								{
									"key": "gender",
									"value": "test"
								},
								{
									"key": "status",
									"value": "active"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "POST Create User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"pm.test(\"Body is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.email).to.eql(\"randomemail@gmail.com\"); \r",
									"    pm.expect(jsonData.name).to.eql(\"Boban\"); \r",
									"    pm.expect(jsonData.status).to.eql(\"active\");  \r",
									"    pm.collectionVariables.set('UserID', jsonData.id); \r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "fa2436410ecbf5f844b3563887b93a9c8aae99acedf191754599da3bf3c31159",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://gorest.co.in/public/v2/users?email={{email}}&name=Boban&gender=male&status=active",
							"protocol": "https",
							"host": [
								"gorest",
								"co",
								"in"
							],
							"path": [
								"public",
								"v2",
								"users"
							],
							"query": [
								{
									"key": "email",
									"value": "{{email}}"
								},
								{
									"key": "name",
									"value": "Boban"
								},
								{
									"key": "gender",
									"value": "male"
								},
								{
									"key": "status",
									"value": "active"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "POST Create Multiple Users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"pm.test(\"Body is correct\", function () {\r",
									"    pm.response.to.have.body(\"\\{\\\"message\\\":\\\"Authentication failed\\\"\\}\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "fa2436410ecbf5f844b3563887b93a9c8aae99acedf191754599da3bf3c31159",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "\r\n    {\r\n    \"name\": \"Boban\",\r\n    \"email\": \"puurn2s111t@gmail.com\",\r\n    \"gender\": \"male\",\r\n    \"status\": \"active\"\r\n    }, \r\n    {\r\n    \"name\": \"Boban\",\r\n    \"email\": \"puurn3s111t@gmail.com\",\r\n    \"gender\": \"male\",\r\n    \"status\": \"active\"\r\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://gorest.co.in/public/v2/users",
							"protocol": "https",
							"host": [
								"gorest",
								"co",
								"in"
							],
							"path": [
								"public",
								"v2",
								"users"
							],
							"query": [
								{
									"key": "email",
									"value": "prn2s111t@gmail.com",
									"disabled": true
								},
								{
									"key": "name",
									"value": "Boban",
									"disabled": true
								},
								{
									"key": "gender",
									"value": "male",
									"disabled": true
								},
								{
									"key": "status",
									"value": "active",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "PUT",
			"item": [
				{
					"name": "PUT Update User - Email Empty",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 422\", function () {\r",
									"    pm.response.to.have.status(422);\r",
									"});\r",
									"pm.test(\"Body is correct\", function () {\r",
									"    responseBody = {\r",
									"        \"field\": \"email\",\r",
									"        \"message\": \"can't be blank\"\r",
									"    }\r",
									"    pm.expect(pm.response.json()).to.deep.include(responseBody);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "fa2436410ecbf5f844b3563887b93a9c8aae99acedf191754599da3bf3c31159",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Bobaneeeee\",\r\n    \"email\": \"\",\r\n    \"gender\": \"male\",\r\n    \"status\": \"active\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://gorest.co.in/public/v2/users/3021050",
							"protocol": "https",
							"host": [
								"gorest",
								"co",
								"in"
							],
							"path": [
								"public",
								"v2",
								"users",
								"3021050"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT Update User - Email Invalid",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 422\", function () {\r",
									"    pm.response.to.have.status(422);\r",
									"});\r",
									"pm.test(\"Body is correct\", function () {\r",
									"    responseBody = {\r",
									"        \"field\": \"email\",\r",
									"        \"message\": \"is invalid\"\r",
									"    }\r",
									"    pm.expect(pm.response.json()).to.deep.include(responseBody);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "fa2436410ecbf5f844b3563887b93a9c8aae99acedf191754599da3bf3c31159",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Bobaneeeee\",\r\n    \"email\": \"t\",\r\n    \"gender\": \"male\",\r\n    \"status\": \"active\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://gorest.co.in/public/v2/users/3021050",
							"protocol": "https",
							"host": [
								"gorest",
								"co",
								"in"
							],
							"path": [
								"public",
								"v2",
								"users",
								"3021050"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT Update User - Email Taken",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 422\", function () {\r",
									"    pm.response.to.have.status(422);\r",
									"});\r",
									"pm.test(\"Body is correct\", function () {\r",
									"    responseBody = {\r",
									"        \"field\": \"email\",\r",
									"        \"message\": \"has already been taken\"\r",
									"    }\r",
									"    pm.expect(pm.response.json()).to.deep.include(responseBody);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "fa2436410ecbf5f844b3563887b93a9c8aae99acedf191754599da3bf3c31159",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Bobaneeeee\",\r\n    \"email\": \"aaa@gmail.com\",\r\n    \"gender\": \"male\",\r\n    \"status\": \"active\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://gorest.co.in/public/v2/users/3021050",
							"protocol": "https",
							"host": [
								"gorest",
								"co",
								"in"
							],
							"path": [
								"public",
								"v2",
								"users",
								"3021050"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT Update User - Gender Empty",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 422\", function () {\r",
									"    pm.response.to.have.status(422);\r",
									"});\r",
									"pm.test(\"Body is correct\", function () {\r",
									"    responseBody = {\r",
									"        \"field\": \"gender\",\r",
									"        \"message\": \"can't be blank, can be male of female\"\r",
									"    }\r",
									"    pm.expect(pm.response.json()).to.deep.include(responseBody);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "fa2436410ecbf5f844b3563887b93a9c8aae99acedf191754599da3bf3c31159",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Bobaneeeee\",\r\n    \"email\": \"iii@gmail.com\",\r\n    \"gender\": \"\",\r\n    \"status\": \"active\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://gorest.co.in/public/v2/users/3021050",
							"protocol": "https",
							"host": [
								"gorest",
								"co",
								"in"
							],
							"path": [
								"public",
								"v2",
								"users",
								"3021050"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT Update User - Gender Invalid",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 422\", function () {\r",
									"    pm.response.to.have.status(422);\r",
									"});\r",
									"pm.test(\"Body is correct\", function () {\r",
									"    responseBody = {\r",
									"        \"field\": \"gender\",\r",
									"        \"message\": \"can't be blank, can be male of female\"\r",
									"    }\r",
									"    pm.expect(pm.response.json()).to.deep.include(responseBody);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "fa2436410ecbf5f844b3563887b93a9c8aae99acedf191754599da3bf3c31159",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Bobaneeeee\",\r\n    \"email\": \"bobrok@gmail.com\",\r\n    \"gender\": \"non-binary\",\r\n    \"status\": \"active\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://gorest.co.in/public/v2/users/3021050",
							"protocol": "https",
							"host": [
								"gorest",
								"co",
								"in"
							],
							"path": [
								"public",
								"v2",
								"users",
								"3021050"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT Update User - Status Empty",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 422\", function () {\r",
									"    pm.response.to.have.status(422);\r",
									"});\r",
									"pm.test(\"Body is correct\", function () {\r",
									"    responseBody = {\r",
									"        \"field\": \"status\",\r",
									"        \"message\": \"can't be blank\"\r",
									"    }\r",
									"    pm.expect(pm.response.json()).to.deep.include(responseBody);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "fa2436410ecbf5f844b3563887b93a9c8aae99acedf191754599da3bf3c31159",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Bobaneeeee\",\r\n    \"email\": \"iii@gmail.com\",\r\n    \"gender\": \"male\",\r\n    \"status\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://gorest.co.in/public/v2/users/3021050",
							"protocol": "https",
							"host": [
								"gorest",
								"co",
								"in"
							],
							"path": [
								"public",
								"v2",
								"users",
								"3021050"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT Update User - Status Invalid",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 422\", function () {\r",
									"    pm.response.to.have.status(422);\r",
									"});\r",
									"pm.test(\"Body is correct\", function () {\r",
									"    responseBody = {\r",
									"        \"field\": \"status\",\r",
									"        \"message\": \"can't be blank\"\r",
									"    }\r",
									"    pm.expect(pm.response.json()).to.deep.include(responseBody);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "fa2436410ecbf5f844b3563887b93a9c8aae99acedf191754599da3bf3c31159",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Bobaneeeee\",\r\n    \"email\": \"iii@gmail.com\",\r\n    \"gender\": \"male\",\r\n    \"status\": \"ll\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://gorest.co.in/public/v2/users/3021050",
							"protocol": "https",
							"host": [
								"gorest",
								"co",
								"in"
							],
							"path": [
								"public",
								"v2",
								"users",
								"3021050"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT Update User - Positive Flow",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Body is correct\", function () {\r",
									"    responseBody = {\r",
									"    \"email\": \"bobancina@gmail.com\",\r",
									"    \"name\": \"Bobaneeeee\",\r",
									"    \"gender\": \"male\",\r",
									"    \"status\": \"active\",\r",
									"    \"id\": 3021050\r",
									"}\r",
									"    pm.expect(pm.response.json()).to.deep.include(responseBody);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "fa2436410ecbf5f844b3563887b93a9c8aae99acedf191754599da3bf3c31159",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Bobaneeeee\",\r\n    \"email\": \"bobancina@gmail.com\",\r\n    \"gender\": \"male\",\r\n    \"status\": \"active\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://gorest.co.in/public/v2/users/3021050",
							"protocol": "https",
							"host": [
								"gorest",
								"co",
								"in"
							],
							"path": [
								"public",
								"v2",
								"users",
								"3021050"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "PATCH",
			"item": [
				{
					"name": "PATCH Update User - Email Empty",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 422\", function () {\r",
									"    pm.response.to.have.status(422);\r",
									"});\r",
									"pm.test(\"Body is correct\", function () {\r",
									"    responseBody = {\r",
									"        \"field\": \"email\",\r",
									"        \"message\": \"can't be blank\"\r",
									"    }\r",
									"    pm.expect(pm.response.json()).to.deep.include(responseBody);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "fa2436410ecbf5f844b3563887b93a9c8aae99acedf191754599da3bf3c31159",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://gorest.co.in/public/v2/users/3021050?email=",
							"protocol": "https",
							"host": [
								"gorest",
								"co",
								"in"
							],
							"path": [
								"public",
								"v2",
								"users",
								"3021050"
							],
							"query": [
								{
									"key": "email",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "PATCH Update User - Email Invalid",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 422\", function () {\r",
									"    pm.response.to.have.status(422);\r",
									"});\r",
									"pm.test(\"Body is correct\", function () {\r",
									"    responseBody = {\r",
									"        \"field\": \"email\",\r",
									"        \"message\": \"is invalid\"\r",
									"    }\r",
									"    pm.expect(pm.response.json()).to.deep.include(responseBody);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "fa2436410ecbf5f844b3563887b93a9c8aae99acedf191754599da3bf3c31159",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://gorest.co.in/public/v2/users/3021050?email=[[[",
							"protocol": "https",
							"host": [
								"gorest",
								"co",
								"in"
							],
							"path": [
								"public",
								"v2",
								"users",
								"3021050"
							],
							"query": [
								{
									"key": "email",
									"value": "[[["
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "PATCH Update User - Email Taken",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 422\", function () {\r",
									"    pm.response.to.have.status(422);\r",
									"});\r",
									"pm.test(\"Body is correct\", function () {\r",
									"    responseBody = {\r",
									"        \"field\": \"email\",\r",
									"        \"message\": \"has already been taken\"\r",
									"    }\r",
									"    pm.expect(pm.response.json()).to.deep.include(responseBody);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "fa2436410ecbf5f844b3563887b93a9c8aae99acedf191754599da3bf3c31159",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://gorest.co.in/public/v2/users/3021050?email=aaa@gmail.com",
							"protocol": "https",
							"host": [
								"gorest",
								"co",
								"in"
							],
							"path": [
								"public",
								"v2",
								"users",
								"3021050"
							],
							"query": [
								{
									"key": "email",
									"value": "aaa@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "PATCH Update User - Gender Empty",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 422\", function () {\r",
									"    pm.response.to.have.status(422);\r",
									"});\r",
									"pm.test(\"Body is correct\", function () {\r",
									"    responseBody = {\r",
									"        \"field\": \"gender\",\r",
									"        \"message\": \"can't be blank, can be male of female\"\r",
									"    }\r",
									"    pm.expect(pm.response.json()).to.deep.include(responseBody);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "fa2436410ecbf5f844b3563887b93a9c8aae99acedf191754599da3bf3c31159",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://gorest.co.in/public/v2/users/3021050?gender=",
							"protocol": "https",
							"host": [
								"gorest",
								"co",
								"in"
							],
							"path": [
								"public",
								"v2",
								"users",
								"3021050"
							],
							"query": [
								{
									"key": "gender",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "PATCH Update User - Gender Invalid",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 422\", function () {\r",
									"    pm.response.to.have.status(422);\r",
									"});\r",
									"pm.test(\"Body is correct\", function () {\r",
									"    responseBody = {\r",
									"        \"field\": \"gender\",\r",
									"        \"message\": \"can't be blank, can be male of female\"\r",
									"    }\r",
									"    pm.expect(pm.response.json()).to.deep.include(responseBody);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "fa2436410ecbf5f844b3563887b93a9c8aae99acedf191754599da3bf3c31159",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://gorest.co.in/public/v2/users/3021050?gender=non-binary",
							"protocol": "https",
							"host": [
								"gorest",
								"co",
								"in"
							],
							"path": [
								"public",
								"v2",
								"users",
								"3021050"
							],
							"query": [
								{
									"key": "gender",
									"value": "non-binary"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "PATCH Update User - Status Empty",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 422\", function () {\r",
									"    pm.response.to.have.status(422);\r",
									"});\r",
									"pm.test(\"Body is correct\", function () {\r",
									"    responseBody = {\r",
									"        \"field\": \"status\",\r",
									"        \"message\": \"can't be blank\"\r",
									"    }\r",
									"    pm.expect(pm.response.json()).to.deep.include(responseBody);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "fa2436410ecbf5f844b3563887b93a9c8aae99acedf191754599da3bf3c31159",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://gorest.co.in/public/v2/users/3021050?status=",
							"protocol": "https",
							"host": [
								"gorest",
								"co",
								"in"
							],
							"path": [
								"public",
								"v2",
								"users",
								"3021050"
							],
							"query": [
								{
									"key": "status",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "PATCH Update User - Status Invalid",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 422\", function () {\r",
									"    pm.response.to.have.status(422);\r",
									"});\r",
									"pm.test(\"Body is correct\", function () {\r",
									"    responseBody = {\r",
									"        \"field\": \"status\",\r",
									"        \"message\": \"can't be blank\"\r",
									"    }\r",
									"    pm.expect(pm.response.json()).to.deep.include(responseBody);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "fa2436410ecbf5f844b3563887b93a9c8aae99acedf191754599da3bf3c31159",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://gorest.co.in/public/v2/users/3021050?status=ll",
							"protocol": "https",
							"host": [
								"gorest",
								"co",
								"in"
							],
							"path": [
								"public",
								"v2",
								"users",
								"3021050"
							],
							"query": [
								{
									"key": "status",
									"value": "ll"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "PATCH Update User - Positive Flow",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Body is correct\", function () {\r",
									"    responseBody = {\r",
									"    \"gender\": \"female\"\r",
									"}\r",
									"    pm.expect(pm.response.json().gender).to.eql(\"female\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "fa2436410ecbf5f844b3563887b93a9c8aae99acedf191754599da3bf3c31159",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://gorest.co.in/public/v2/users/3021050?gender=female",
							"protocol": "https",
							"host": [
								"gorest",
								"co",
								"in"
							],
							"path": [
								"public",
								"v2",
								"users",
								"3021050"
							],
							"query": [
								{
									"key": "gender",
									"value": "female"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "DELETE",
			"item": [
				{
					"name": "DELETE Delete User - Invalid ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"count\", 9);\r",
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "fa2436410ecbf5f844b3563887b93a9c8aae99acedf191754599da3bf3c31159",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://gorest.co.in/public/v2/users/0",
							"protocol": "https",
							"host": [
								"gorest",
								"co",
								"in"
							],
							"path": [
								"public",
								"v2",
								"users",
								"0"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE Delete User - Positive Flow",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "fa2436410ecbf5f844b3563887b93a9c8aae99acedf191754599da3bf3c31159",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://gorest.co.in/public/v2/users/{{UserID}}",
							"protocol": "https",
							"host": [
								"gorest",
								"co",
								"in"
							],
							"path": [
								"public",
								"v2",
								"users",
								"{{UserID}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Rate Limitation",
			"item": [
				{
					"name": "GET Reach Rate Limit",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var currentCount = pm.environment.get(\"count\")\r",
									"if (currentCount > 0){\r",
									" currentCount = currentCount -1 ;\r",
									" pm.environment.set(\"count\", currentCount);\r",
									" postman.setNextRequest(\"GET Reach Rate Limit\");\r",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status is 200\", function () {\r",
									"    pm.sendRequest(\"https://gorest.co.in/public/v2/users\", function (err, response) {\r",
									"    });\r",
									"    pm.expect(pm.response.code).to.eq(200); \r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{RateLimitToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://gorest.co.in/public/v2/users",
							"protocol": "https",
							"host": [
								"gorest",
								"co",
								"in"
							],
							"path": [
								"public",
								"v2",
								"users"
							],
							"query": [
								{
									"key": "email",
									"value": "[[[",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Rate Limitation Test",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Rate limit reached\", function () {\r",
									"    pm.sendRequest(\"https://gorest.co.in/public/v2/users\", function (err, response) {\r",
									"    });\r",
									"    pm.expect(pm.response.code).to.eq(429); \r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{RateLimitToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://gorest.co.in/public/v2/users",
							"protocol": "https",
							"host": [
								"gorest",
								"co",
								"in"
							],
							"path": [
								"public",
								"v2",
								"users"
							],
							"query": [
								{
									"key": "email",
									"value": "[[[",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "fa2436410ecbf5f844b3563887b93a9c8aae99acedf191754599da3bf3c31159",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "RateLimitToken",
			"value": "68144cf0cb37a419606402494870886b250bb616a36cd0693dbe4e0902fd6fc5",
			"type": "string"
		},
		{
			"key": "Unauthorized",
			"value": "",
			"type": "string"
		},
		{
			"key": "UserID",
			"value": "",
			"type": "string"
		},
		{
			"key": "email",
			"value": "randomemail@gmail.com"
		},
		{
			"key": "base_url",
			"value": "https://gorest.co.in/public/v2/users"
		}
	]
}